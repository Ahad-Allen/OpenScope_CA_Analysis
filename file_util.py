'''
file_util.py

This module contains functions for dealing with reading and writing of data files 
generated by the AIBS experiments for the Credit Assignment Project.

Authors: Blake Richards

Date: August, 2018

Note: this code uses python 2.7.

'''

import os.path
import exceptions

###############################################################################
def check_datadir(datadir):
    '''
    check_datadir(datadir)

    Checks whether the specified data directory exists and conforms to the
    expected AIBS structure for a session.
 
    Required arguments:
        - data_directory (string)    : name of the data directory

    Outputs:
        - dirokay (boolean): true is structure is okay, false is not
                             Note: if the directory doesn't exist
                             a FILE_NOT_FOUND_ERROR exception is raised
    '''

    # check that the directory exists
    if not os.path.isdir(datadir):
        raise exceptions.OSError('%s either does not exist or is not a directory', datadir)
    else:
        dirokay = True

    # TO-DO: ACTUALLY CHECK THE DIRECTORY STRUCTURE, MAKES SURE IT CONFORMS TO EXPECTED

    return dirokay

###############################################################################
def get_file_names(masterdir, session, experiment, date, extra):
    '''
    get_file_names(main_directory, session, experiment, date, extra)

    Gets the full path names of all of the expected data files in the main_directory
    for the specified session and experiment on the given date that can be used for 
    the Credit Assignment analysis.
 
    Required arguments:
        - main_directory (string)    : name of the master data directory
        - session (string)           : string for the session ID (9 digits)
                                       e.g. '712483302'
        - experiment (string)        : string for the experiment ID (9 digits)
                                       e.g. '715925563'
        - date (string)              : date for the session in YYYYMMDD
                                       e.g. '20160802'
        - extra (string)             : extra 6-digit string used for session
                                       files (currently a mystery)
                                       e.g. '389778' 
                                       TO-DO: RENAME LATER

    Outputs:
        - session_dir    (string): full path name of the session directory
        - experiment_dir (string): full path name of the experiment directory
        - stim_pkl_file  (string): full path name of the stimulus
                                   pickle file
        - stim_sync_file (string): full path name of the stimulus
                                   synchronization hdf5 file
        - corrected_data (string): full path name of the motion
                                   corrected 2p data hdf5 file
        - zstack (string)        : full path name of the zstack
                                   2p file from the session
    '''
    
    # get the name of the session and experiment data directories
    sessiondir    = masterdir + "/" + 'ophys_session_' + session
    experimentdir = sessiondir + "/" + 'ophys_experiment_' + experiment

    # check the directory 
    if check_datadir(sessiondir):

        # set the file names
        stim_pkl_file  = sessiondir + "/" + session + "_" + extra + "_" + date + '_stim.pkl'
        stim_sync_file = sessiondir + "/" + session + "_" + extra + "_" + date + '_sync.h5'
        corrected_data = sessiondir + "/" + 'concat_31Hz_0.h5'
        zstack         = sessiondir + "/" + session + '_zstack_column.h5'

        # double check that the files actually exist
        if not os.path.isfile(stim_pkl_file):
            raise exceptions.OSError('%s does not exist' %(stim_pkl_file))
        if not os.path.isfile(stim_sync_file):
            raise exceptions.OSError('%s does not exist' %(stim_sync_file))
        if not os.path.isfile(corrected_data):
            raise exceptions.OSError('%s does not exist' %(corrected_data))
        if not os.path.isfile(zstack):
            raise exceptions.OSError('%s does not exist' %(zstack))

        # TO-DO: ADD OTHER KEY FILES

    else:
        raise exceptions.UserWarning('%s does not conform to expected AIBS structure')

    return (sessiondir, experimentdir, stim_pkl_file, stim_sync_file, corrected_data, zstack)
